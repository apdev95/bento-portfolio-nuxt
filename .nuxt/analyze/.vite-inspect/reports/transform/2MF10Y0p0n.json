{
  "resolvedId": "/Users/andreapuglisi/Desktop/andreapuglisi.io/node_modules/@motionone/dom/dist/gestures/scroll/offsets/offset.es.js",
  "transforms": [
    {
      "name": "vite:load-fallback",
      "result": "import { isNumber, isString } from '@motionone/utils';\nimport { resolveEdge, namedEdges } from './edge.es.js';\n\nconst defaultOffset = [0, 0];\nfunction resolveOffset(offset, containerLength, targetLength, targetInset) {\n    let offsetDefinition = Array.isArray(offset) ? offset : defaultOffset;\n    let targetPoint = 0;\n    let containerPoint = 0;\n    if (isNumber(offset)) {\n        /**\n         * If we're provided offset: [0, 0.5, 1] then each number x should become\n         * [x, x], so we default to the behaviour of mapping 0 => 0 of both target\n         * and container etc.\n         */\n        offsetDefinition = [offset, offset];\n    }\n    else if (isString(offset)) {\n        offset = offset.trim();\n        if (offset.includes(\" \")) {\n            offsetDefinition = offset.split(\" \");\n        }\n        else {\n            /**\n             * If we're provided a definition like \"100px\" then we want to apply\n             * that only to the top of the target point, leaving the container at 0.\n             * Whereas a named offset like \"end\" should be applied to both.\n             */\n            offsetDefinition = [offset, namedEdges[offset] ? offset : `0`];\n        }\n    }\n    targetPoint = resolveEdge(offsetDefinition[0], targetLength, targetInset);\n    containerPoint = resolveEdge(offsetDefinition[1], containerLength);\n    return targetPoint - containerPoint;\n}\n\nexport { resolveOffset };\n",
      "start": 1702568943533,
      "end": 1702568943546,
      "sourcemaps": null
    },
    {
      "name": "nuxt:layer-aliasing",
      "start": 1702568943546,
      "end": 1702568943546,
      "order": "pre"
    },
    {
      "name": "nuxt:server-devonly:transform",
      "start": 1702568943546,
      "end": 1702568943546,
      "order": "pre"
    },
    {
      "name": "nuxt:client-fallback-auto-id",
      "start": 1702568943546,
      "end": 1702568943546,
      "order": "pre"
    },
    {
      "name": "vite:css",
      "start": 1702568943546,
      "end": 1702568943546,
      "order": "normal"
    },
    {
      "name": "vite:esbuild",
      "start": 1702568943546,
      "end": 1702568943546,
      "order": "normal"
    },
    {
      "name": "vite:json",
      "start": 1702568943546,
      "end": 1702568943546,
      "order": "normal"
    },
    {
      "name": "vite:worker",
      "start": 1702568943546,
      "end": 1702568943546,
      "order": "normal"
    },
    {
      "name": "vite:vue",
      "start": 1702568943546,
      "end": 1702568943546,
      "order": "normal"
    },
    {
      "name": "vite:vue-jsx",
      "start": 1702568943546,
      "end": 1702568943546,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1702568943546,
      "end": 1702568943546,
      "order": "normal"
    },
    {
      "name": "nuxt:remove-plugin-metadata",
      "start": 1702568943546,
      "end": 1702568943546,
      "order": "normal"
    },
    {
      "name": "nuxt:chunk-error",
      "start": 1702568943546,
      "end": 1702568943546,
      "order": "normal"
    },
    {
      "name": "nuxt:components:imports",
      "start": 1702568943546,
      "end": 1702568943547,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1702568943547,
      "end": 1702568943547,
      "order": "normal"
    },
    {
      "name": "ssr-styles",
      "start": 1702568943547,
      "end": 1702568943547,
      "order": "normal"
    },
    {
      "name": "vite:define",
      "start": 1702568943547,
      "end": 1702568943547,
      "order": "normal"
    },
    {
      "name": "vite:css-post",
      "start": 1702568943547,
      "end": 1702568943547,
      "order": "normal"
    },
    {
      "name": "vite:build-html",
      "start": 1702568943547,
      "end": 1702568943547,
      "order": "normal"
    },
    {
      "name": "vite:worker-import-meta-url",
      "start": 1702568943547,
      "end": 1702568943547,
      "order": "normal"
    },
    {
      "name": "vite:asset-import-meta-url",
      "start": 1702568943547,
      "end": 1702568943547,
      "order": "normal"
    },
    {
      "name": "commonjs",
      "start": 1702568943547,
      "end": 1702568943547,
      "order": "normal"
    },
    {
      "name": "vite:dynamic-import-vars",
      "start": 1702568943547,
      "end": 1702568943547,
      "order": "normal"
    },
    {
      "name": "vite:import-glob",
      "start": 1702568943547,
      "end": 1702568943547,
      "order": "normal"
    },
    {
      "name": "nuxt:composable-keys",
      "start": 1702568943547,
      "end": 1702568943547,
      "order": "post"
    },
    {
      "name": "nuxt:imports-transform",
      "start": 1702568943547,
      "end": 1702568943547,
      "order": "post"
    },
    {
      "name": "unctx:transform",
      "start": 1702568943547,
      "end": 1702568943547,
      "order": "post"
    },
    {
      "name": "nuxt:pages-macros-transform",
      "start": 1702568943547,
      "end": 1702568943547,
      "order": "post"
    },
    {
      "name": "nuxt:runtime-paths-dep",
      "start": 1702568943547,
      "end": 1702568943547,
      "order": "post"
    },
    {
      "name": "nuxt:route-injection-plugin",
      "start": 1702568943547,
      "end": 1702568943547,
      "order": "post"
    },
    {
      "name": "nuxt:components-loader",
      "start": 1702568943547,
      "end": 1702568943547,
      "order": "post"
    },
    {
      "name": "nuxt:tree-shake-composables:transform",
      "start": 1702568943547,
      "end": 1702568943547,
      "order": "post"
    },
    {
      "name": "vite:build-import-analysis",
      "start": 1702568943547,
      "end": 1702568943547,
      "order": "normal"
    },
    {
      "name": "vite:reporter",
      "start": 1702568943547,
      "end": 1702568943547,
      "order": "normal"
    }
  ]
}
