{
  "resolvedId": "/Users/andreapuglisi/Desktop/andreapuglisi.io/node_modules/@motionone/dom/dist/timeline/utils/edit.es.js",
  "transforms": [
    {
      "name": "vite:load-fallback",
      "result": "import { mix, getEasingForSegment, removeItem } from '@motionone/utils';\n\nfunction eraseKeyframes(sequence, startTime, endTime) {\n    for (let i = 0; i < sequence.length; i++) {\n        const keyframe = sequence[i];\n        if (keyframe.at > startTime && keyframe.at < endTime) {\n            removeItem(sequence, keyframe);\n            // If we remove this item we have to push the pointer back one\n            i--;\n        }\n    }\n}\nfunction addKeyframes(sequence, keyframes, easing, offset, startTime, endTime) {\n    /**\n     * Erase every existing value between currentTime and targetTime,\n     * this will essentially splice this timeline into any currently\n     * defined ones.\n     */\n    eraseKeyframes(sequence, startTime, endTime);\n    for (let i = 0; i < keyframes.length; i++) {\n        sequence.push({\n            value: keyframes[i],\n            at: mix(startTime, endTime, offset[i]),\n            easing: getEasingForSegment(easing, i),\n        });\n    }\n}\n\nexport { addKeyframes, eraseKeyframes };\n",
      "start": 1702568943457,
      "end": 1702568943471,
      "sourcemaps": null
    },
    {
      "name": "nuxt:layer-aliasing",
      "start": 1702568943471,
      "end": 1702568943471,
      "order": "pre"
    },
    {
      "name": "nuxt:server-devonly:transform",
      "start": 1702568943471,
      "end": 1702568943471,
      "order": "pre"
    },
    {
      "name": "nuxt:client-fallback-auto-id",
      "start": 1702568943471,
      "end": 1702568943471,
      "order": "pre"
    },
    {
      "name": "vite:css",
      "start": 1702568943471,
      "end": 1702568943471,
      "order": "normal"
    },
    {
      "name": "vite:esbuild",
      "start": 1702568943471,
      "end": 1702568943471,
      "order": "normal"
    },
    {
      "name": "vite:json",
      "start": 1702568943471,
      "end": 1702568943471,
      "order": "normal"
    },
    {
      "name": "vite:worker",
      "start": 1702568943471,
      "end": 1702568943471,
      "order": "normal"
    },
    {
      "name": "vite:vue",
      "start": 1702568943471,
      "end": 1702568943471,
      "order": "normal"
    },
    {
      "name": "vite:vue-jsx",
      "start": 1702568943471,
      "end": 1702568943471,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1702568943471,
      "end": 1702568943471,
      "order": "normal"
    },
    {
      "name": "nuxt:remove-plugin-metadata",
      "start": 1702568943471,
      "end": 1702568943471,
      "order": "normal"
    },
    {
      "name": "nuxt:chunk-error",
      "start": 1702568943471,
      "end": 1702568943471,
      "order": "normal"
    },
    {
      "name": "nuxt:components:imports",
      "start": 1702568943471,
      "end": 1702568943471,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1702568943471,
      "end": 1702568943471,
      "order": "normal"
    },
    {
      "name": "ssr-styles",
      "start": 1702568943471,
      "end": 1702568943471,
      "order": "normal"
    },
    {
      "name": "vite:define",
      "start": 1702568943471,
      "end": 1702568943471,
      "order": "normal"
    },
    {
      "name": "vite:css-post",
      "start": 1702568943471,
      "end": 1702568943471,
      "order": "normal"
    },
    {
      "name": "vite:build-html",
      "start": 1702568943471,
      "end": 1702568943471,
      "order": "normal"
    },
    {
      "name": "vite:worker-import-meta-url",
      "start": 1702568943471,
      "end": 1702568943471,
      "order": "normal"
    },
    {
      "name": "vite:asset-import-meta-url",
      "start": 1702568943471,
      "end": 1702568943471,
      "order": "normal"
    },
    {
      "name": "commonjs",
      "start": 1702568943471,
      "end": 1702568943471,
      "order": "normal"
    },
    {
      "name": "vite:dynamic-import-vars",
      "start": 1702568943471,
      "end": 1702568943471,
      "order": "normal"
    },
    {
      "name": "vite:import-glob",
      "start": 1702568943471,
      "end": 1702568943471,
      "order": "normal"
    },
    {
      "name": "nuxt:composable-keys",
      "start": 1702568943471,
      "end": 1702568943471,
      "order": "post"
    },
    {
      "name": "nuxt:imports-transform",
      "start": 1702568943471,
      "end": 1702568943471,
      "order": "post"
    },
    {
      "name": "unctx:transform",
      "start": 1702568943471,
      "end": 1702568943471,
      "order": "post"
    },
    {
      "name": "nuxt:pages-macros-transform",
      "start": 1702568943471,
      "end": 1702568943471,
      "order": "post"
    },
    {
      "name": "nuxt:runtime-paths-dep",
      "start": 1702568943471,
      "end": 1702568943471,
      "order": "post"
    },
    {
      "name": "nuxt:route-injection-plugin",
      "start": 1702568943471,
      "end": 1702568943471,
      "order": "post"
    },
    {
      "name": "nuxt:components-loader",
      "start": 1702568943471,
      "end": 1702568943471,
      "order": "post"
    },
    {
      "name": "nuxt:tree-shake-composables:transform",
      "start": 1702568943471,
      "end": 1702568943471,
      "order": "post"
    },
    {
      "name": "vite:build-import-analysis",
      "start": 1702568943471,
      "end": 1702568943471,
      "order": "normal"
    },
    {
      "name": "vite:reporter",
      "start": 1702568943471,
      "end": 1702568943471,
      "order": "normal"
    }
  ]
}
