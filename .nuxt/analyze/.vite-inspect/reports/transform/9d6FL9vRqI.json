{
  "resolvedId": "/Users/andreapuglisi/Desktop/andreapuglisi.io/node_modules/@motionone/dom/dist/gestures/scroll/info.es.js",
  "transforms": [
    {
      "name": "vite:load-fallback",
      "result": "import { progress, velocityPerSecond } from '@motionone/utils';\n\n/**\n * A time in milliseconds, beyond which we consider the scroll velocity to be 0.\n */\nconst maxElapsed = 50;\nconst createAxisInfo = () => ({\n    current: 0,\n    offset: [],\n    progress: 0,\n    scrollLength: 0,\n    targetOffset: 0,\n    targetLength: 0,\n    containerLength: 0,\n    velocity: 0,\n});\nconst createScrollInfo = () => ({\n    time: 0,\n    x: createAxisInfo(),\n    y: createAxisInfo(),\n});\nconst keys = {\n    x: {\n        length: \"Width\",\n        position: \"Left\",\n    },\n    y: {\n        length: \"Height\",\n        position: \"Top\",\n    },\n};\nfunction updateAxisInfo(element, axisName, info, time) {\n    const axis = info[axisName];\n    const { length, position } = keys[axisName];\n    const prev = axis.current;\n    const prevTime = info.time;\n    axis.current = element[\"scroll\" + position];\n    axis.scrollLength = element[\"scroll\" + length] - element[\"client\" + length];\n    axis.offset.length = 0;\n    axis.offset[0] = 0;\n    axis.offset[1] = axis.scrollLength;\n    axis.progress = progress(0, axis.scrollLength, axis.current);\n    const elapsed = time - prevTime;\n    axis.velocity =\n        elapsed > maxElapsed ? 0 : velocityPerSecond(axis.current - prev, elapsed);\n}\nfunction updateScrollInfo(element, info, time) {\n    updateAxisInfo(element, \"x\", info, time);\n    updateAxisInfo(element, \"y\", info, time);\n    info.time = time;\n}\n\nexport { createScrollInfo, updateScrollInfo };\n",
      "start": 1702568943460,
      "end": 1702568943480,
      "sourcemaps": null
    },
    {
      "name": "nuxt:layer-aliasing",
      "start": 1702568943480,
      "end": 1702568943480,
      "order": "pre"
    },
    {
      "name": "nuxt:server-devonly:transform",
      "start": 1702568943480,
      "end": 1702568943480,
      "order": "pre"
    },
    {
      "name": "nuxt:client-fallback-auto-id",
      "start": 1702568943480,
      "end": 1702568943480,
      "order": "pre"
    },
    {
      "name": "vite:css",
      "start": 1702568943480,
      "end": 1702568943480,
      "order": "normal"
    },
    {
      "name": "vite:esbuild",
      "start": 1702568943480,
      "end": 1702568943480,
      "order": "normal"
    },
    {
      "name": "vite:json",
      "start": 1702568943480,
      "end": 1702568943480,
      "order": "normal"
    },
    {
      "name": "vite:worker",
      "start": 1702568943480,
      "end": 1702568943480,
      "order": "normal"
    },
    {
      "name": "vite:vue",
      "start": 1702568943480,
      "end": 1702568943480,
      "order": "normal"
    },
    {
      "name": "vite:vue-jsx",
      "start": 1702568943480,
      "end": 1702568943480,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1702568943480,
      "end": 1702568943481,
      "order": "normal"
    },
    {
      "name": "nuxt:remove-plugin-metadata",
      "start": 1702568943481,
      "end": 1702568943481,
      "order": "normal"
    },
    {
      "name": "nuxt:chunk-error",
      "start": 1702568943481,
      "end": 1702568943481,
      "order": "normal"
    },
    {
      "name": "nuxt:components:imports",
      "start": 1702568943481,
      "end": 1702568943481,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1702568943481,
      "end": 1702568943481,
      "order": "normal"
    },
    {
      "name": "ssr-styles",
      "start": 1702568943481,
      "end": 1702568943481,
      "order": "normal"
    },
    {
      "name": "vite:define",
      "start": 1702568943481,
      "end": 1702568943481,
      "order": "normal"
    },
    {
      "name": "vite:css-post",
      "start": 1702568943481,
      "end": 1702568943481,
      "order": "normal"
    },
    {
      "name": "vite:build-html",
      "start": 1702568943481,
      "end": 1702568943481,
      "order": "normal"
    },
    {
      "name": "vite:worker-import-meta-url",
      "start": 1702568943481,
      "end": 1702568943481,
      "order": "normal"
    },
    {
      "name": "vite:asset-import-meta-url",
      "start": 1702568943481,
      "end": 1702568943481,
      "order": "normal"
    },
    {
      "name": "commonjs",
      "start": 1702568943481,
      "end": 1702568943481,
      "order": "normal"
    },
    {
      "name": "vite:dynamic-import-vars",
      "start": 1702568943481,
      "end": 1702568943481,
      "order": "normal"
    },
    {
      "name": "vite:import-glob",
      "start": 1702568943481,
      "end": 1702568943481,
      "order": "normal"
    },
    {
      "name": "nuxt:composable-keys",
      "start": 1702568943481,
      "end": 1702568943481,
      "order": "post"
    },
    {
      "name": "nuxt:imports-transform",
      "start": 1702568943481,
      "end": 1702568943481,
      "order": "post"
    },
    {
      "name": "unctx:transform",
      "start": 1702568943481,
      "end": 1702568943481,
      "order": "post"
    },
    {
      "name": "nuxt:pages-macros-transform",
      "start": 1702568943481,
      "end": 1702568943481,
      "order": "post"
    },
    {
      "name": "nuxt:runtime-paths-dep",
      "start": 1702568943481,
      "end": 1702568943481,
      "order": "post"
    },
    {
      "name": "nuxt:route-injection-plugin",
      "start": 1702568943481,
      "end": 1702568943481,
      "order": "post"
    },
    {
      "name": "nuxt:components-loader",
      "start": 1702568943481,
      "end": 1702568943481,
      "order": "post"
    },
    {
      "name": "nuxt:tree-shake-composables:transform",
      "start": 1702568943481,
      "end": 1702568943481,
      "order": "post"
    },
    {
      "name": "vite:build-import-analysis",
      "start": 1702568943481,
      "end": 1702568943481,
      "order": "normal"
    },
    {
      "name": "vite:reporter",
      "start": 1702568943481,
      "end": 1702568943481,
      "order": "normal"
    }
  ]
}
